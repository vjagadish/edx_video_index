1
00:00:01,220 --> 00:00:04,630
Hi, welcome to our module on if then L
statements.

2
00:00:04,630 --> 00:00:06,390
I use these almost every time I work with
SAS.

3
00:00:06,390 --> 00:00:10,510
>> It is a great way to clean, transform
and work with your data.

4
00:00:10,510 --> 00:00:11,880
>> As you maybe have guessed,

5
00:00:11,880 --> 00:00:16,200
if then L statements have two main parts,
the condition and the action.

6
00:00:16,200 --> 00:00:20,240
If a condition is true, then SAS will
perform the specified action.

7
00:00:20,240 --> 00:00:23,010
SAS evaluates each record of the data set
one at

8
00:00:23,010 --> 00:00:25,939
a time to see if it meets the condition
following the if statement.

9
00:00:27,130 --> 00:00:30,010
And then takes the action that you
requested after the word then.

10
00:00:31,980 --> 00:00:35,035
I will use this complicated code to
demonstrate how if, then,

11
00:00:35,035 --> 00:00:36,060
L statements work in SAS.

12
00:00:36,060 --> 00:00:41,730
When you run this code, SAS goes through
the data set one row at a time.

13
00:00:41,730 --> 00:00:46,390
For each row, SAS looks at the first
expression following the first if.

14
00:00:46,390 --> 00:00:48,540
If this condition is true for that row,

15
00:00:48,540 --> 00:00:53,270
SAS will execute the first statement
following the then of that line of code.

16
00:00:53,270 --> 00:00:56,150
If this is the case, SAS will not check
any of the else if

17
00:00:56,150 --> 00:00:58,210
statements that come after the first line
of code.

18
00:00:59,540 --> 00:01:02,340
If the condition is false for that row in
our data set.

19
00:01:02,340 --> 00:01:05,070
SAS will check the condition at the next
else/if line of code.

20
00:01:05,070 --> 00:01:09,010
If this condition is true for that row in
our data.

21
00:01:09,010 --> 00:01:10,980
SAS will execute the second action, and

22
00:01:10,980 --> 00:01:13,140
will not look at the remaining else/if
lines of code.

23
00:01:14,360 --> 00:01:16,915
If the second condition is false for the
row.

24
00:01:16,915 --> 00:01:21,980
SAS will check the condition at the next
else if line of code SASS will continue to

25
00:01:21,980 --> 00:01:25,060
do this until it gets to the very last L
statement you have specified.

26
00:01:26,350 --> 00:01:29,390
Once a row meets the criteria for an if
statement.

27
00:01:29,390 --> 00:01:33,150
Or one of the L statements SAS will
perform the action after the vance

28
00:01:33,150 --> 00:01:35,880
statement and then start the whole process
over again for

29
00:01:35,880 --> 00:01:37,080
the next row in the data set.

30
00:01:37,080 --> 00:01:40,380
>> An important thing to remember is that

31
00:01:40,380 --> 00:01:43,690
event statement must always come after an
if statement.

32
00:01:43,690 --> 00:01:45,420
All of this sounds pretty complicated.

33
00:01:45,420 --> 00:01:47,400
It'll make a lot more sense when we take a
look at an example.

34
00:01:49,300 --> 00:01:51,280
Let's start by looking at a dataset called
people.

35
00:01:52,550 --> 00:01:57,510
As you can see, it has a column for
gender, and a column for weight.

36
00:01:57,510 --> 00:02:00,400
If you take a look at our data you'll see
that one male has a value of 9800

37
00:02:00,400 --> 00:02:01,640
for the weight.

38
00:02:01,640 --> 00:02:03,450
And another subject has a negative value
for the weight.

39
00:02:04,460 --> 00:02:07,710
Weight can never be a negative number, and
9,800 is a pretty unreasonable weight.

40
00:02:07,710 --> 00:02:12,080
These were probably mis-coded whenever the
data was collected.

41
00:02:12,080 --> 00:02:13,870
let's use if, then statements to clean up
our data.

42
00:02:15,100 --> 00:02:18,890
As you can see in our code, we first made
a copy of our original data set,

43
00:02:18,890 --> 00:02:22,060
then we have some if, then statements that
modify the data set.

44
00:02:22,060 --> 00:02:25,890
Remember, when we use if/then statements,
SAS will check each row, one at a time,

45
00:02:25,890 --> 00:02:26,990
for each of these conditions.

46
00:02:28,510 --> 00:02:30,255
So, first SAS will look at row number 1.

47
00:02:31,380 --> 00:02:33,250
Gender is male and weight is 125.

48
00:02:33,250 --> 00:02:37,840
So, SAS will check if this row meets the
condition of the first if statement.

49
00:02:38,930 --> 00:02:39,640
In this line of code,

50
00:02:39,640 --> 00:02:44,090
we can see that the first condition is if
weight is greater than 500.

51
00:02:44,090 --> 00:02:48,990
Since this row has weight equal to 125,
which is not greater than 500,.

52
00:02:48,990 --> 00:02:51,870
Condition is not met and SAS will ignore
the rest of this line of code.

53
00:02:53,035 --> 00:02:54,900
SAS will then move on to the next
[UNKNOWN] statement.

54
00:02:57,170 --> 00:03:01,660
This time the condition is weight less
than zero and weight not missing.

55
00:03:01,660 --> 00:03:05,780
In this case the weight value is not
missing, but it is greater than zero, so

56
00:03:05,780 --> 00:03:07,880
this condition is not met.

57
00:03:07,880 --> 00:03:09,970
This means that SAS will ignore the rest
of this line of code.

58
00:03:11,860 --> 00:03:13,480
Since it reached the end of the if.

59
00:03:13,480 --> 00:03:16,520
And as if statements without meeting any
of the conditions.

60
00:03:16,520 --> 00:03:18,480
SAS will not do anything to Vizero in the
data set.

61
00:03:19,920 --> 00:03:22,530
Now SAS will do the same process for the
second row in our data set.

62
00:03:24,160 --> 00:03:27,420
The second row has male for gender and a
weight of negative 150.

63
00:03:27,420 --> 00:03:31,340
So first, SAS will check it against the
first.

64
00:03:31,340 --> 00:03:33,550
If statement.

65
00:03:33,550 --> 00:03:36,070
Again, this condition is for weight
greater than 500.

66
00:03:36,070 --> 00:03:38,800
This is not the case for the row we're
working on.

67
00:03:38,800 --> 00:03:40,470
So SAS will ignore the rest of this line
and

68
00:03:40,470 --> 00:03:42,020
then move on to the next else/if
statement.

69
00:03:43,560 --> 00:03:44,300
In the next line of code,

70
00:03:44,300 --> 00:03:47,490
the condition is weight less than zero and
weight not missing.

71
00:03:48,490 --> 00:03:52,680
In this case, the weight value is not
missing, and it is less than zero.

72
00:03:52,680 --> 00:03:53,980
So our route meets this condition.

73
00:03:55,130 --> 00:03:56,680
Now SAS will perform the action that we

74
00:03:56,680 --> 00:03:58,570
specify after the then statement in this
row.

75
00:03:58,570 --> 00:04:02,920
If you take a look at this code, we've
written, than delete.

76
00:04:02,920 --> 00:04:05,990
This tells SAS to delete that row from our
data set.

77
00:04:05,990 --> 00:04:08,710
Once it does this, SAS will move on to the
next row of data set,

78
00:04:08,710 --> 00:04:10,540
and start this whole process over again.

79
00:04:12,220 --> 00:04:13,550
Let's run this code and look at the
output.

80
00:04:16,370 --> 00:04:18,040
Here on the left we have the original data
set,

81
00:04:18,040 --> 00:04:21,570
and on the right we have the output from
the code we just ran.

82
00:04:21,570 --> 00:04:24,690
As you can see, it deleted these two rows
from our data set.

83
00:04:24,690 --> 00:04:26,660
Just like we specified in our if then
statements.

84
00:04:29,390 --> 00:04:32,020
>> Let's go over another example to fully
demonstrate the power of

85
00:04:32,020 --> 00:04:33,950
the if then L statement.

86
00:04:33,950 --> 00:04:35,900
Say we were interested in creating
separate and

87
00:04:35,900 --> 00:04:39,090
permanent data set that only included the
males in our study.

88
00:04:39,090 --> 00:04:40,620
Take a look at the codes on the right of
the screen.

89
00:04:42,500 --> 00:04:45,770
Here I told SAS to create a new permanent
HRP

90
00:04:45,770 --> 00:04:49,910
223 dataset called people_males based on
the original people data.

91
00:04:51,150 --> 00:04:54,050
I then asked sas to look at my data one
row at a time.

92
00:04:54,050 --> 00:04:56,040
Just like rom described.

93
00:04:56,040 --> 00:04:57,680
And determine if some one was a female.

94
00:04:58,950 --> 00:05:01,700
If a rona data set fulfills this
conditions,

95
00:05:01,700 --> 00:05:05,380
then SAS will fulfill the action and
delete the observation.

96
00:05:05,380 --> 00:05:05,900
Lets run the code.

97
00:05:05,900 --> 00:05:12,020
On our right, we have our new data set
called people_males.

98
00:05:12,020 --> 00:05:15,440
Notice how SAS has deleted all the female
observations.

99
00:05:15,440 --> 00:05:16,620
So what happened behind the scenes?

100
00:05:18,300 --> 00:05:20,600
So SAS first looked at row 1 of our
original data,

101
00:05:21,660 --> 00:05:25,830
as you can see gender is m for male and
weight is 125.

102
00:05:25,830 --> 00:05:31,020
So SAS checked to see if this row met the
condition of the first if statement.

103
00:05:31,020 --> 00:05:35,514
In this line of code we can see that the
condition is if gender equals f.

104
00:05:36,830 --> 00:05:40,210
Since this row has gender recorded as M
the condition is not met.

105
00:05:42,170 --> 00:05:46,060
Since this row has gender recorded as M
the condition is not met.

106
00:05:46,060 --> 00:05:48,980
And SAS ignored the rest of the lines of
code.

107
00:05:48,980 --> 00:05:51,786
SAS then checked to see if there were any
other [UNKNOWN] statements.

108
00:05:52,950 --> 00:05:55,750
As you may recall from our code, we didn't
include any.

109
00:05:55,750 --> 00:05:59,110
So no actions were taken, and SAS moved on
to the next row in our data set.

110
00:06:00,755 --> 00:06:03,580
Once SAS reached row 3, where gender is
female and

111
00:06:03,580 --> 00:06:09,450
weight is 115, it checked to see whether
the condition if gender equals f was met.

112
00:06:09,450 --> 00:06:12,260
Since this row has a gender recorded as f.

113
00:06:12,260 --> 00:06:13,780
The condition was met and

114
00:06:13,780 --> 00:06:17,790
SAS fulfilled the action and deleted the
observation and moved onto the next row.

115
00:06:17,790 --> 00:06:21,410
SAS continued this process for all the
rows in our data set.
